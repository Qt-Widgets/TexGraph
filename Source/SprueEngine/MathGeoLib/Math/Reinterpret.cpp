#include "../FactoryMethods.h"
// ----------------------------------------------------------------------------
// <auto-generated>
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
// </auto-generated>
// ----------------------------------------------------------------------------
#include "Reinterpret.h"

using namespace System;
using namespace System::Runtime::InteropServices;

SprueBind::Math::FloatIntReinterpret::FloatIntReinterpret(::math::FloatIntReinterpret* native)
{
    __f = native->f;
    __i = native->i;
}

SprueBind::Math::FloatIntReinterpret^ SprueBind::Math::FloatIntReinterpret::__CreateInstance(::System::IntPtr native)
{
    return gcnew ::SprueBind::Math::FloatIntReinterpret((::math::FloatIntReinterpret*) native.ToPointer());
}

float SprueBind::Math::FloatIntReinterpret::F::get()
{
    return __f;
}

void SprueBind::Math::FloatIntReinterpret::F::set(float value)
{
    __f = value;
}

unsigned int SprueBind::Math::FloatIntReinterpret::I::get()
{
    return __i;
}

void SprueBind::Math::FloatIntReinterpret::I::set(unsigned int value)
{
    __i = value;
}

SprueBind::Math::DoubleU64Reinterpret::DoubleU64Reinterpret(::math::DoubleU64Reinterpret* native)
{
    __d = native->d;
    __i = native->i;
}

SprueBind::Math::DoubleU64Reinterpret^ SprueBind::Math::DoubleU64Reinterpret::__CreateInstance(::System::IntPtr native)
{
    return gcnew ::SprueBind::Math::DoubleU64Reinterpret((::math::DoubleU64Reinterpret*) native.ToPointer());
}

double SprueBind::Math::DoubleU64Reinterpret::D::get()
{
    return __d;
}

void SprueBind::Math::DoubleU64Reinterpret::D::set(double value)
{
    __d = value;
}

unsigned long long SprueBind::Math::DoubleU64Reinterpret::I::get()
{
    return __i;
}

void SprueBind::Math::DoubleU64Reinterpret::I::set(unsigned long long value)
{
    __i = value;
}

// <summary>Returns the bit pattern of the given float as a u32.</summary>
// DEBUG: FORCE_INLINE u32 ReinterpretAsU32(float f){	FloatIntReinterpret fi;	fi.f = f;	return fi.i;}
unsigned int SprueBind::Math::Reinterpret::ReinterpretAsU32(float f)
{
    auto __ret = ::math::ReinterpretAsU32(f);
    return __ret;
}

unsigned long long SprueBind::Math::Reinterpret::ReinterpretAsU64(double d)
{
    auto __ret = ::math::ReinterpretAsU64(d);
    return __ret;
}

// <summary>Converts the bit pattern specified by the given integer to a floating point (this is a binary conversion, not numeral!).</summary>
// DEBUG: FORCE_INLINE float ReinterpretAsFloat(u32 i){	FloatIntReinterpret fi;	fi.i = i;#ifdef __EMSCRIPTEN__	assert(ReinterpretAsU32(fi.f) == i);#endif	return fi.f;}
float SprueBind::Math::Reinterpret::ReinterpretAsFloat(unsigned int i)
{
    auto __arg0 = (::u32)(::uint32_t)i;
    auto __ret = ::math::ReinterpretAsFloat(__arg0);
    return __ret;
}

double SprueBind::Math::Reinterpret::ReinterpretAsDouble(unsigned long long i)
{
    auto __arg0 = (::u64)(::uint64_t)i;
    auto __ret = ::math::ReinterpretAsDouble(__arg0);
    return __ret;
}

